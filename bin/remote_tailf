#!/usr/bin/python
# -*- coding:utf-8-unix; mode:python; -*-

from __future__ import print_function
import sys, os, signal
from subprocess import Popen, PIPE
from threading import Thread

try:
    from Queue import Queue, Empty
except ImportError:
    from queue import Queue, Empty  # python 3.x

ON_POSIX = 'posix' in sys.builtin_module_names

USAGE="""%s file [user@]host [ [user@]host ... ]
指定されたホストの file を tail -f する
""" % os.path.basename(__file__)

def main(argv):

  if len(argv) <= 1:
    abort("引数が不足しています")

  target_file = argv[1]

  queue = Queue()
  for i in range(2, len(argv)):
    cmd = ["ssh", argv[i], "tail -f {}".format(target_file)]
    execute(cmd, queue)

  while True:
    try:
      print(queue.get(timeout=1).rstrip())
    except Empty:
      pass

def abort(msg):
  err(msg)
  err(USAGE)
  sys.exit(1)

def err(msg):
  print(msg, file=sys.stderr)

def execute(cmd, queue):
  p = Popen(cmd, stdout=PIPE, bufsize=1, close_fds=ON_POSIX)
  t = Thread(target=enqueue_output, args=(p.stdout, queue))
  t.daemon = True # thread dies with the program
  t.start()

def enqueue_output(out, queue):
  for line in iter(out.readline, b''):
    queue.put(line)
  out.close()

if __name__ == "__main__":
  main(sys.argv)
